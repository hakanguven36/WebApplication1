@{
    ViewData["Title"] = "Home Page";
}


<input type="hidden" id="seenorwhatgelen" value="@ViewBag.seenorwhat" />
<input type="hidden" id="hamResimID" value="@ViewBag.hamResimID" />
<input type="hidden" id="filesCount" value="@ViewBag.filesCount" />
<input type="hidden" id="imageIndex" value="@ViewBag.imageIndex" />
<div style="position:absolute; top:-8000px">
    <img id="image" src="@ViewBag.path" />
</div>

@section Styles {
<style>
    .secBtn {
        color: white;
    }
        .secBtn:hover {
            color: white !important;
        }
</style>
}


@if(!string.IsNullOrWhiteSpace(ViewBag.hata))
{ 
    <span class="text-danger">@ViewBag.hata</span>
}

<table class="table table-sm table-borderless">
    <tr>
        <td colspan="2" style="border-bottom:1px gray solid; padding-bottom:18px">
            <span style="cursor:pointer" class="p-2">@(ViewBag.imageIndex) / @ViewBag.filesCount</span>
            <button class="btn btn-sm btn-secondary" onclick="NavigateBackward()"><< Geri</button>
            <button class="btn btn-sm btn-secondary" onclick="NavigateForward()">İleri >></button>
            <span class="p-2">
                <select id="seenorwhat" class="form-control-sm">
                    <option value="0" >İşlenmemişler</option>
                    <option value="1">İşlenmişler</option>
                    <option value="2">Tamamı</option>
                </select>
            </span>
            <span class="p-2"> || </span>
            <button class="btn btn-sm btn-success" onclick="Completed()"> Etiketleri Kaydet </button>
            <span class="p-2"> || </span>
            <button class="btn btn-sm btn-outline-danger" onclick="ResmiSil()"> resmi sil </button>
        </td>
    </tr>
    <tr>
        <td colspan="2" style="padding-top:18px">
            <button class="btn secBtn" onclick="ChooseClass(0)" style="background-color:darkslategray">Toprak</button>
            <button class="btn secBtn" onclick="ChooseClass(1)" style="background-color:darkgreen">Kültür</button>
            <button class="btn secBtn" onclick="ChooseClass(2)" style="background-color:orangered">YabancıOt</button>
            <button class="btn secBtn" onclick="ChooseClass(3)" style="background-color:royalblue">%50 Kültür+Yabancı</button>
            &nbsp;&nbsp;||&nbsp;&nbsp;
            <button class="btn btn-sm secBtn" onclick="ClearClasses()" style="background-color:black">Tümünü Temizle!</button>
        </td>
    </tr>
    <tr>
        <td style="vertical-align:top">
            <div style="margin: 2px">
                <span style="border: solid 1px gray; border-radius: 2px; padding: 3px">
                    <span style="margin: 4px; margin-right: 10px; cursor: pointer" onclick="FlyingCanvasChangeSize(false)">-</span>
                    <span style="margin: 4px; margin-left: 10px; cursor: pointer" onclick="FlyingCanvasChangeSize(true)">+</span>
                </span>
            </div>
            <canvas id="flyingCanvas"></canvas>
        </td>

        <td style="vertical-align:top">
            <div style="margin: 2px">
                <span style="border: solid 1px gray; border-radius: 2px; padding: 3px">
                    <span style="margin: 4px; margin-right: 10px; cursor: pointer" onclick="CanvasChangeSize(false)">-</span>
                    <span style="margin: 4px; margin-left: 10px; cursor: pointer" onclick="CanvasChangeSize(true)">+</span>
                </span>
                <input type="range" id="etiketPaintRange"/>
            </div>
            <canvas id="canvas"></canvas>
        </td>
    </tr>
</table>
    

<script>
    var gridSize = 128;
    var lineWidth = 2;
    var canvasDesiredWidth = 1000;
    var flyingCanvasDesiredWidth = 600;
    var seenorwhat = 0;
    var hamResimID = Number($("#hamResimID").val());
    var etiketPaintRange = 0.3;
    cursor = { col: 0, row: 0 };

    $(document).ready(function () {
        $("#seenorwhat").val($("#seenorwhatgelen").val());
        GetEtiketler();
    });

    

    $("#seenorwhat").change(function () {
        seenorwhat = $(this).val();
        window.location = "/Home/Index/" + imageIndex +"?seenorwhat=" + seenorwhat;
    })

    // Get image Info
    var image, imageWidth, imageHeight, gridCountX, gridCountY, cursorindex;

    // create canvas
    var canvas, ctx, percentage, cGridSize, flyingCanvas, ctx2;

    $("#image").on("load", function () {
        // Get image Info
        cursorindex = 0;
        image = document.getElementById("image");
        imageWidth = image.width; // should be 1280
        imageHeight = image.height;
        gridCountX = Math.floor(imageWidth / gridSize);
        gridCountY = Math.floor(imageHeight / gridSize);

        // create canvas
        canvas = document.getElementById("canvas");
        ctx = canvas.getContext("2d");
        percentage = imageWidth / imageHeight;
        canvas.width = canvasDesiredWidth;
        canvas.height = canvas.width / percentage;
        cGridSize = gridSize * (canvasDesiredWidth / imageWidth);

        flyingCanvas = document.getElementById("flyingCanvas");
        ctx2 = flyingCanvas.getContext("2d");
        flyingCanvas.width = flyingCanvasDesiredWidth;
        flyingCanvas.height = flyingCanvasDesiredWidth;

        UpdateAll();
    });


    function UpdateAll() {
        DrawImage();
        DrawGrid();
        PaintChosenGrids();
        DrawRedRect();
        DrawFlyingImage();
    }

    function CanvasChangeSize(increase) {
        if (increase)
            canvasDesiredWidth += 50;
        else
            canvasDesiredWidth -= 50;
        canvasDesiredWidth = canvasDesiredWidth < 200 ? 200 : canvasDesiredWidth;
        canvas.width = canvasDesiredWidth;
        canvas.height = canvas.width / percentage;
        UpdateAll();
    }
    function FlyingCanvasChangeSize(increase) {
        if (increase)
            flyingCanvasDesiredWidth += 50;
        else
            flyingCanvasDesiredWidth -= 50;
        flyingCanvasDesiredWidth = flyingCanvasDesiredWidth < 200 ? 200 : flyingCanvasDesiredWidth;
        flyingCanvas.width = flyingCanvasDesiredWidth;
        flyingCanvas.height = flyingCanvasDesiredWidth;
        DrawFlyingImage();
    }
    function DrawImage() {
        ctx.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);
    }
    function DrawGrid() {
        ctx.strokeStyle = "white";
        ctx.lineWidth = lineWidth;

        // fixing cGridSize value
        cGridSize = gridSize * (canvasDesiredWidth / imageWidth);

        // vertical lines
        for (var i = 0; i <= gridCountX; i++) {
            ctx.moveTo(i * cGridSize, 0);
            ctx.lineTo(i * cGridSize, gridCountY * cGridSize);
            ctx.stroke();
        }
        // horizontal lines
        for (var i = 0; i <= gridCountY; i++) {
            ctx.moveTo(0, i * cGridSize);
            ctx.lineTo(gridCountX * cGridSize, i * cGridSize);
            ctx.stroke();
        }
    }
    function DrawRedRect() {
        ctx.lineWidth = 4;
        ctx.strokeStyle = "red";
        ctx.beginPath();
        ctx.rect(cursor.col * cGridSize, cursor.row * cGridSize, cGridSize, cGridSize);
        ctx.stroke();
    }
    function DrawFlyingImage() {
        ctx2.drawImage(image, cursor.col * gridSize, cursor.row * gridSize, gridSize, gridSize, 0, 0, flyingCanvas.width, flyingCanvas.height);
    }


    var secimler = [];
    var filesCount = Number($("#filesCount").val());
    var imageIndex = Number($("#imageIndex").val());

    function NavigateBackward() {
        console.log("imageIndex"+imageIndex);
        imageIndex -= 1;
        if (imageIndex < 1) {
            imageIndex = 1;
            return;
        }
        console.log("yeni image index"+imageIndex);
        window.location = "/Home/Index/" + imageIndex;
    }
    function NavigateForward() {
        imageIndex += 1;
        if (imageIndex > filesCount) {
            imageIndex = filesCount;
            return;
        }
        window.location = "/Home/Index/" + imageIndex;
    }

    function ChooseClass(choice) {
        var pack = { imageIndex: imageIndex, choice: choice, cursorCol: cursor.col, cursorRow: cursor.row };
        var packExist = false;
        for (var i = 0; i < secimler.length; i++) {
            // pack zaten varsa sadece choice değerini değiştir.. array.push yapma!
            if (secimler[i].cursorCol == pack.cursorCol && secimler[i].cursorRow == pack.cursorRow) {
                secimler[i].choice = pack.choice;
                packExist = true;
            }
        }

        if (!packExist) {
            secimler.push({ choice: choice, cursorCol: cursor.col, cursorRow: cursor.row, cursorSize: gridSize });
        }

        CursorIncrease();
    }

    function GetEtiketler() {
        new OzAjax("/Home/GetEtiketler", GET, { hamResimID: hamResimID }, GetEtBasari).Send();
        function GetEtBasari(data) {
            secimler = JSON.parse(data);
            PaintChosenGrids();
        }
    }

    function CursorIncrease() {
        cursorindex = gridCountX * cursor.row + cursor.col;
        cursorindex++;
        if (cursorindex > gridCountX * gridCountY - 1)
            cursorindex = 0;

        ArrangeCursorPosition();
    }
    function ArrangeCursorPosition() {
        cursor.row = Math.floor(cursorindex / gridCountX);
        cursor.col = cursorindex - (cursor.row * gridCountX);

        UpdateAll();
    }

    var Colors = ["black", "green", "red", "blue", "purple"]
    function PaintChosenGrids() {
        ctx.globalAlpha = etiketPaintRange;

        var x, y, w, h;
        for (var i = 0; i < secimler.length; i++) {

            ctx.fillStyle = Colors[secimler[i].choice];

            x = cGridSize * secimler[i].cursorCol;
            y = cGridSize * secimler[i].cursorRow;
            w = cGridSize;
            h = cGridSize;

            ctx.fillRect(x + 2, y + 2, w - 4, h - 4);
        }
        ctx.globalAlpha = 1.0;
    }

    $("#canvas").click(function (e) {
        cursor.col = Math.floor(e.offsetX / cGridSize);
        cursor.row = Math.floor(e.offsetY / cGridSize);
        cursor.row = (cursor.row > gridCountY - 1) ? gridCountY - 1 : cursor.row;
        UpdateAll();
    })

    function ClearClasses() {
        secimler = [];
        UpdateAll();
    }

    function Completed() {
        
        new OzAjax("/Home/Tamamlanan", POST, { secimler: secimler, hamResimID: hamResimID  }, KaydetBasari, KaydetHata).Send();
        function KaydetBasari(data) {
            alert(data);
        }
        function KaydetHata(error) {
            alert(error);
        }
    }

    $("#etiketPaintRange").change(function () {
        etiketPaintRange = $(this).val() / 100.0;
        UpdateAll();
    });

</script>    

