// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("WebApplication1.Models.Annotation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("color")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("textColor")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Annotation");
                });

            modelBuilder.Entity("WebApplication1.Models.Coordinate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LabelID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("LabelID");

                    b.ToTable("Coordinate");
                });

            modelBuilder.Entity("WebApplication1.Models.Label", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("annoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("photoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("projectID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("shape")
                        .HasColumnType("INTEGER");

                    b.Property<float>("sizeFactor")
                        .HasColumnType("REAL");

                    b.Property<int>("userID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("photoID");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("WebApplication1.Models.Photo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("contentType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("extention")
                        .HasColumnType("TEXT");

                    b.Property<string>("imageFormat")
                        .HasColumnType("TEXT");

                    b.Property<string>("orjname")
                        .HasColumnType("TEXT");

                    b.Property<double>("sizeMB")
                        .HasColumnType("REAL");

                    b.Property<string>("sysname")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("admin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("hatali")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("kilitli")
                        .HasColumnType("INTEGER");

                    b.Property<string>("passwordEnc")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication1.Models.Annotation", b =>
                {
                    b.HasOne("WebApplication1.Models.Project", "Project")
                        .WithMany("annoList")
                        .HasForeignKey("ProjectID");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.Coordinate", b =>
                {
                    b.HasOne("WebApplication1.Models.Label", null)
                        .WithMany("points")
                        .HasForeignKey("LabelID");
                });

            modelBuilder.Entity("WebApplication1.Models.Label", b =>
                {
                    b.HasOne("WebApplication1.Models.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("photoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("WebApplication1.Models.Photo", b =>
                {
                    b.HasOne("WebApplication1.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.Label", b =>
                {
                    b.Navigation("points");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Navigation("annoList");
                });
#pragma warning restore 612, 618
        }
    }
}
